# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

name: $(SourceBranchName).$(BuildDefinitionName).$(date:yyyyMMdd)$(rev:.r)

trigger:
- master

pool:
  vmImage: 'ubuntu-20.04'

variables:
  phpVersion: 7.4

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- script: |
    npm install
    npm run build
  displayName: 'npm install and build'
- task: DeleteFiles@1
  inputs:
    #sourceFolder: # Optional
    contents: 'node_modules' 
    #removeSourceFolder: # Optional
- task: CopyFiles@2
  inputs:
    sourceFolder: $(Build.SourcesDirectory)/build/
    #contents: '**' 
    targetFolder: '/home/vsts/work/1/s/'
    #cleanTargetFolder: false # Optional
    #overWrite: false # Optional
    #flattenFolders: false # Optional
    #preserveTimestamp: false # Optional

- script: |
    sudo update-alternatives --set php /usr/bin/php$(phpVersion)
    sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
    sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
    sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
    sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
    php -version
  displayName: 'Use PHP version $(phpVersion)'

- script: composer install --no-interaction --prefer-dist
  displayName: 'composer install'
- script: |
    php artisan cache:clear
    php artisan config:clear 
  displayName: 'Clear config,cache'  
- script: |
    screen -d -m php artisan serve 
  displayName: 'Starting Chrome and the Web Server'  
- task: PublishBuildArtifacts@1 
  inputs:
    pathtoPublish: '/home/vsts/work/1/'
